@符号
java 注解（Annotation）标识。
注解，定义在java.lang包中。
@Override  表示当前方法是覆盖父类的方法。
@Deprecated  表示当前元素是不赞成使用的。
@SuppressWarnings 表示关闭一些不当的编译器警告信息。

最大值、最小值
public class TestJAVA4_4
{
    public static void main(String[] args)  {
    	
    	int a1 =  java.lang.Integer.MIN_VALUE;
    	int a2 = java.lang.Integer.MAX_VALUE;
    	System.out.println(a1);
    	System.out.println(a2);
    	
    	float b1 = java.lang.Float.MIN_VALUE;
    	float b2 = java.lang.Float.MAX_VALUE;
    	System.out.println(b1);
    	System.out.println(b2);
 
    	double c1 = java.lang.Double.MIN_VALUE;
    	double c2 = java.lang.Double.MAX_VALUE;
    	System.out.println(c1);
    	System.out.println(c2);
    	
    	short d1 = Short.MAX_VALUE;
    	short d2 = Short.MIN_VALUE;
    	System.out.println(d1);
    	System.out.println(d2);
 
    	byte e1 = Byte.MAX_VALUE;
    	byte e2 = Byte.MIN_VALUE;
    	System.out.println(e1);
    	System.out.println(e2); 
    }    
}

-2147483648
2147483647
1.4E-45
3.4028235E38
4.9E-324
1.7976931348623157E308
32767
-32768
127
-128

多态
多态是面向对象程序设计的又一个重要特征。多态是允许程序中出现重名现象。
Java 语言中含有方法重载与成员覆盖两种形式的多态。
方法重载：在一个类中，允许多个方法使用同一个名字，但方法的参数不同，完成的功能也不同。
成员覆盖：子类与父类允许具有相同的变量名称，但数据类型不同，允许具有相同的方法名称，但完成的功能不同。
多态的特性使程序的抽象程度和简捷程度更高，有助于程序设计人员对程序的分组协同开发。

匿名对象
“匿名对象”，顾名思义，就是没有明确的声明的对象。可以简单的理解为只使用一次的对象，即没有任何一个具体的对象名称引用它。
System.out.println(new classA.d);


this()
调用类中无参构造方法

static
静态变量
静态函数

静态代码块
public class TestJAVA4_4
{
	static {System.out.println("static block TestJAVA4_4");}
    public static void main(String[] args)  {	
    	classA ca = new classA();
    	classA cb = new classA();
    	ca.fun1();
    	cb.fun1();
    } 
}

class classA
{
  public void fun1()
  {
	  System.out.println("classA");
  }
  
  static {System.out.println("static block classA");}

}
执行结果：
static block TestJAVA4_4
static block classA
classA
classA




